
####### PROJECT #######

[project]
name = "bellhop"
version = "0.1"

description = "Bellhop underwater acoustic propagation model"
readme = "README.md"
license = {file = "LICENSE"}

dependencies = [
    "matplotlib",
    "gcovr",
    "numpy",
    "scipy",
    "pandas",
    "bokeh",
]

requires-python = ">=3.12, <3.13"

authors = [
  {name = "Will Robertson", email = "wspr81@gmail.com"},
]
maintainers = [
  {name = "Will Robertson", email = "wspr81@gmail.com"},
]

classifiers = [
  # How mature is this project? Common values are
  #   3 - Alpha
  #   4 - Beta
  #   5 - Production/Stable
  "Development Status :: 4 - Beta",

  # Indicate who your project is intended for
  # "Intended Audience :: Developers",
  # "Topic :: Software Development :: Build Tools",

  "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",

  # Specify the Python versions you support here.
  "Programming Language :: Python :: 3.12",
]


[project.urls]
Homepage = "https://github.com/AUMAG/bellhop"
Documentation = "https://aumag.github.io/bellhop/"
Repository = "https://github.com/AUMAG/bellhop.git"
Issues = "https://github.com/AUMAG/bellhop/issues"
Changelog = "https://github.com/AUMAG/bellhop/blob/master/CHANGES.md"

####### BUILD #######

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


####### RUFF #######

[tool.ruff]
output-format = "github"



####### HATCH #######

[tool.hatch.build.targets.wheel]
packages = ["bellhop","python/bellhop"]

[tool.hatch.build]
sources = [".", "python"]

[project.optional-dependencies]
dev = [
    "pytest",
]

[tool.hatch.envs.default]
features = ["dev"]  # includes pytest

[tool.hatch.envs.default.env-vars]
PATH = "{root}/bin:{env:PATH}"
PYTHONPATH = "{root}/python:{env:PYTHONPATH:}"

[tool.hatch.envs.default.scripts]
install-dev = "pip install -e ."
test = [
    "install-dev",
    "pytest"
]
testv = [
    "install-dev",
    "pytest --capture=tee-sys"
]
debug = [
    "install-dev",
    "echo PWD: `pwd`; echo PATH: $PATH; python -c 'import bellhop; print(\"bellhop:\", bellhop.__file__)'"
]
docf  = "ford -g -d fortran ford.md"
docp = "sphinx-build python/docs doc/media/python"
cov  = [
    "install-dev",
    "make coverage-full"
]
lint = "fortitude check --output-format concise --line-length 129 --ignore PORT011,C121,C003"

[tool.hatch.build.targets.sdist]
ignore-vcs = true
include = [
  "/tests/*.py",
]
exclude = [
  "/docs/*",
]

